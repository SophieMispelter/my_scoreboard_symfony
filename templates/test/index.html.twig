{% extends 'base.html.twig' %}

{% block title %}Hello TestController!{% endblock %} 
    {# ce fichier index hérite du fichier base.html, donc tous les blocks de index vont écraser ceux de base. Ici title est comme un id, on pourrait le nommer selon nos besoins #}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="example-wrapper">
    <h1>Hello {{ controller_name }}! ✅</h1>
    {#  L'interpolation {{}} est l'équivalent du echo php <?= ?>
        Les variables en Twig ne sont pas inroduites par un $ comme en php.
        Comme Twig est un moteur de template pour faire de l'affichage, ce fichier sera transformé ensuite en php.
        Ce fichier template est l'équivalent d'un fichier vue en MVC. #}


    <p>{{texte}}</p>

    {% if addition is defined %} 
        <p>La somme de 12 + 7 est égal à : {{addition}}</p>
    {% endif %}
    {# Ici, on met une condition (balise Twig If) sur notre variable addition pcq ds la première route elle n'existe pas #}

    This friendly message is coming from:
    <ul>
        <li>Your controller at <code><a href="{{ '/Applications/MAMP/htdocs/myscoreboard/src/Controller/TestController.php'|file_link(0) }}">src/Controller/TestController.php</a></code></li>
        <li>Your template at <code><a href="{{ '/Applications/MAMP/htdocs/myscoreboard/templates/test/index.html.twig'|file_link(0) }}">templates/test/index.html.twig</a></code></li>
    </ul>
</div>
{% endblock %}
